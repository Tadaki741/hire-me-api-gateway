services:
  zoo:
    image: confluentinc/cp-zookeeper:latest
    hostname: zoo
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092, LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zoo:
        condition: service_healthy
  hire-me-api-gateway:
    image: hire-me-api-gateway
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hire-me-api-gateway
    environment:
#      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
#      - SPRING_KAFKA_CONSUMER_GROUP_ID=group_id
#      - SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=earliest
#      - SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
#      - SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
#      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
#      - SPRING_KAFKA_PRODUCER_KEY_SERIALIZER=org.apache.kafka.common.serialization.StringSerializer
#      - SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER=org.apache.kafka.common.serialization.StringSerializer
      - SPRING_CLOUD_GATEWAY_ROUTES[0].id=microservice-User
      - SPRING_CLOUD_GATEWAY_ROUTES[0].uri=http://hire-me-microservice-user:8080/users
      - SPRING_CLOUD_GATEWAY_ROUTES[0].predicates[0]=Path=/users/**
      - SPRING_CLOUD_GATEWAY_ROUTES[1].id=microservice-CV
      - SPRING_CLOUD_GATEWAY_ROUTES[1].uri=http://hire-me-microservice-cv:18080/cv
      - SPRING_CLOUD_GATEWAY_ROUTES[1].predicates[0]=Path=/cv/**
      - SERVER_PORT=1432
    ports:
      - "1432:1432"

volumes:
  kakfa:
  zookeeper:

networks:
    default:
        external: false
        name: hire-me-network